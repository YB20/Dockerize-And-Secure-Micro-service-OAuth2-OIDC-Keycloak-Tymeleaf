spring.application.name=customer-app
spring.datasource.url=jdbc:h2:mem:customers-db
spring.h2.console.enabled=true
server.port=8083

spring.security.oauth2.client.registration.google.clientId=248583674083-5o7ra9av3c95tf0ug7h1vn3o18hi0jbk.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.provider.google.user-name-attribute=email

spring.security.oauth2.client.registration.github.clientId=7ea545fc308a963c8833
spring.security.oauth2.client.registration.github.client-secret=ca45abef16ec4e72dcb70140cd7370ec4ad0f82d
spring.security.oauth2.client.provider.github.user-name-attribute=login

#################################################keycloak###################################################

spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=ecom-customer-client
spring.security.oauth2.client.registration.keycloak.client-secret=0nrBJQNL6c0nzaBkfV0KU0NvRhjbFEML
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=${KEYCLOAK_REDIRECT_URI:http://localhost:8083/login/oauth2/code/ecom-customer-client}
spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/ecom-app}

spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

spring.security.oauth2.client.provider.keycloak.authorization-uri=${KEYCLOAK_AUTH:http://localhost:8080/realms/ecom-app/protocol/openid-connect/auth}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_AUTH_TOKEN:http://localhost:8080/realms/ecom-app/protocol/openid-connect/token}

